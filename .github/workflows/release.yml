name: Release Build

on:
  push:
    tags:
      - 'v*.*.*'  # Triggers on version tags like v1.2.0
  workflow_dispatch:  # Allow manual triggering

jobs:
  release-windows:
    name: Windows Installer
    runs-on: windows-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Install Qt
        uses: jurplel/install-qt-action@v3
        with:
          version: '5.15.2'
          host: 'windows'
          target: 'desktop'
          arch: 'win64_msvc2019_64'
          modules: ''
      
      - name: Build EmberViewer
        shell: cmd
        run: |
          mkdir build
          cd build
          cmake .. -G "Visual Studio 17 2022" -A x64 -DCMAKE_BUILD_TYPE=Release -DCMAKE_PREFIX_PATH=%Qt5_DIR%
          cmake --build . --config Release
      
      - name: Deploy Qt dependencies
        shell: cmd
        run: |
          mkdir deploy
          copy build\EmberViewer\Release\EmberViewer.exe deploy\
          cd deploy
          windeployqt.exe --release --no-translations EmberViewer.exe
      
      - name: Verify deployed files
        shell: cmd
        run: |
          echo === Deployed files ===
          dir deploy /s
      
      - name: Install NSIS
        run: |
          choco install nsis -y
      
      - name: Create installer
        shell: cmd
        run: |
          cd EmberViewer\installer\windows
          "C:\Program Files (x86)\NSIS\makensis.exe" installer.nsi
      
      - name: Rename installer
        shell: cmd
        run: |
          cd EmberViewer\installer\windows
          move EmberViewer-Setup.exe EmberViewer-${{ github.ref_name }}-Setup.exe
      
      - name: Upload installer artifact
        uses: actions/upload-artifact@v4
        with:
          name: EmberViewer-Windows-Installer
          path: EmberViewer/installer/windows/EmberViewer-*.exe
          retention-days: 30
      
      - name: Add installer to Release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          files: EmberViewer/installer/windows/EmberViewer-*.exe
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  release-linux:
    name: Linux AppImage
    runs-on: ubuntu-22.04
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y qtbase5-dev cmake build-essential ninja-build wget file
      
      - name: Build EmberViewer
        run: |
          cmake -B build -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/usr -GNinja
          cmake --build build --target EmberViewer
      
      - name: Create AppDir
        run: |
          mkdir -p build/AppDir/usr/bin
          mkdir -p build/AppDir/usr/share/applications
          mkdir -p build/AppDir/usr/share/icons/hicolor/scalable/apps
          cp build/EmberViewer/EmberViewer build/AppDir/usr/bin/
          cp EmberViewer/resources/EmberViewer.desktop build/AppDir/usr/share/applications/
          cp EmberViewer/resources/icon.svg build/AppDir/usr/share/icons/hicolor/scalable/apps/EmberViewer.svg
      
      - name: Create AppImage
        run: |
          cd build
          wget -q https://github.com/linuxdeploy/linuxdeploy/releases/download/continuous/linuxdeploy-x86_64.AppImage
          wget -q https://github.com/linuxdeploy/linuxdeploy-plugin-qt/releases/download/continuous/linuxdeploy-plugin-qt-x86_64.AppImage
          chmod +x linuxdeploy*.AppImage
          
          ./linuxdeploy-x86_64.AppImage --appimage-extract >/dev/null
          mv squashfs-root linuxdeploy-dir
          
          ./linuxdeploy-plugin-qt-x86_64.AppImage --appimage-extract >/dev/null
          mv squashfs-root qt-plugin-dir
          
          export QMAKE=/usr/bin/qmake
          export QT_SELECT=qt5
          export PATH="$(pwd)/qt-plugin-dir:$PATH"
          
          linuxdeploy-dir/AppRun --appdir=AppDir --plugin qt --output appimage
          
          VERSION="${{ github.ref_name }}"
          VERSION="${VERSION#v}"
          mv EmberViewer*.AppImage EmberViewer-${VERSION}-x86_64.AppImage
      
      - name: Upload AppImage artifact
        uses: actions/upload-artifact@v4
        with:
          name: EmberViewer-Linux-AppImage
          path: build/EmberViewer-*-x86_64.AppImage
          retention-days: 30
      
      - name: Add AppImage to Release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          files: build/EmberViewer-*-x86_64.AppImage
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # Placeholder for future macOS release builds
  # release-macos:
  #   name: macOS DMG
  #   runs-on: macos-latest
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v4
  #     # ... macOS DMG creation steps
